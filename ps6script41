#!/usr/bin/env python3
import re
newlengths = []
newlengths2 = []
newlengths3 = []
kmercoverage = []
physicallengths = []
with open ('c41ids', "r") as fh:
    for line in fh:
        i = 0
        length = re.findall("[0-9]+_c", line)
        newlengths.append(length[i])
        i += 1

for item in newlengths:
    x = item.strip("_c")
    newlengths2.append(float(x))

with open ('c41ids', "r") as fh:
    for line in fh:
        ind = 0
        coverage = re.findall("v_[0-9\.]+", line)
        newlengths3.append(coverage[ind])
        ind += 1

for item in newlengths3:
    y = item.strip("_v")
    kmercoverage.append(float(y))

newlengths2.sort()
kmercoverage.sort()

#print (newlengths2)
#print (kmercoverage)

#max contigs
print("max contig =",newlengths2[-1])

#physical length
for number in (newlengths2):
    pl = (number-1+41)
    physicallengths.append(pl)
#print (physicallengths)

#number contigs
print (len(newlengths2))
#Average Contig Length
total = sum(newlengths2)
average = total/(len(newlengths2))
print ("Average Contig Length:",average)

#Total length of genome
tl = (sum(physicallengths))
print ("Total Genome Length:",tl)

#mean depth coverage
mdc = (sum(kmercoverage))/(len(newlengths3))
print ("Mean Depth Coverage",mdc)

#N50 calculation
mp = (tl)/2
#print ("MP is",mp)
#print (physicallengths)
count=0
i = -1
for value in physicallengths:
    while count < mp:
        i += 1
        count += value
        break
print ("N50:",physicallengths[i])

buckets= {}
for number in range(1000):
    buckets[number * 100] = 0
for value in physicallengths:
    bucket = (int(value/100)*100)
    if bucket in buckets:
        buckets[bucket] += 1
bucketsfiltered = {}
for entry in buckets:
    if buckets[entry] != 0:
        bucketsfiltered[entry] = buckets[entry]
print(bucketsfiltered)
